import SwiftUI

// Generated by Supernova - do not modify manually
extension Gradient {
    
    static let Token = Gradient.TokenGradient()
    
    struct TokenGradient {

        {[ for group in @ds.tokenGroupsOfType("Gradient") ]}
        {[ if @boolean.not(@boolean.and(@compare.empty(group.tokenIds), @compare.empty(group.subgroups))) ]}
        // {{ group.name }}
        {[ for token in @ds.tokensByGroupId(group.id)]}
        {[ if token.value.type == "Linear" ]}
        {* {[ inject "token_description" context token /]} *}
        {[ if @boolean.not(@compare.empty(token.description)) ]}
        // {{ token.description }}
        {[/]}
        let {[ inject "token_name" context self /]} = LinearGradient(
            gradient: Gradient(stops:Â [
                {[ for stop in token.value.stops ]}
                Gradient.Stop(color: {[ inject "color" context stop.color /]}, location: {{ stop.position }}),
                {[/]}
            ]),
            startPoint: UnitPoint(x: {{ token.value.from.x }}, y: {{ token.value.from.y }}),
            endPoint: UnitPoint(x: {{ token.value.to.x }}, y: {{ token.value.to.y }}) 
        )
        {[/]}
        {[/]}

        {[/]}
        {[/]}
    }
}