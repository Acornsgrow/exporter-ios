{[ inject "auto_generated_comment" context self /]}

import SwiftUI

public struct SecondaryMainButtonStyle: ButtonStyle {

    @Environment(\.isEnabled) var isEnabled

    public func makeBody(configuration: Self.Configuration) -> some View {
        configuration.label
            .font(Font.custom("AvenirNext-DemiBold", size: 14))
            .frame(maxWidth: .infinity)
            .frame(height: 44)
            .overlay(
                RoundedRectangle(cornerRadius: 22)
                    .stroke(isEnabled ? Color.Grove.Button.ButtonBorderColorSecondaryHover : .Grove.Button.ButtonBorderColorSecondaryBase, lineWidth: 1)
            )
            .foregroundColor(isEnabled ? .Grove.Button.ButtonTextColorSecondaryBase : .Grove.Button.ButtonTextColorSecondaryDisabled)
            .background(Color.Grove.Button.ButtonBorderColorSecondaryInvertedBase)
            .disabled(!isEnabled)
            .clipShape(Capsule())
            .opacity(configuration.isPressed && isEnabled ? 0.8 : 1.0)
    }
}

extension ButtonStyle where Self == SecondaryMainButtonStyle {

    public static var secondaryStyle: SecondaryMainButtonStyle {
        SecondaryMainButtonStyle()
    }

}
